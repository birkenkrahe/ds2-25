#+title: Agenda Notebook
#+author: Marcus Birkenkrahe
#+subtitle: DSC 205 - Intro to Advanced Data Science - SP25
#+SEQ_TODO: TODO NEXT IN_PROGRESS | DONE CANCELLED
#+startup: overview hideblocks indent entitiespretty
#+property: :header-args:C:      :main yes :includes <stdio.h> :results output :exports both
#+property: :header-args:python: :session *Python* :python python3 :results output :exports both
#+property: :header-args:R  :session *R* :results output :exports both
#+property: :header-args:C++:    :main yes :includes <iostream> :results output :exports both
* Week 1: Course overview & R Basics Test
#+attr_html: :width 400px
[[../img/cover.png]]

- [X] Course overview
- [X] On the DataCamp assignments
- [X] A brief review of R (followed by test 1 - until Thu 23-Jan)
- [ ] Calling functions: Scope and R environments

** DONE On DataCamp assignments

1. Watch the video first with full attention.
2. Write down immediate questions for later.
3. Build a notebook for DataCamp courses.
4. Recreate the individual steps in the video.
5. Create or import datasets.
6. Look up function definitions.
7. Solve the exercises outside of DataCamp.
8. If you loathe Emacs, use DataLab or Colab instead.
9. Don't ignore nagging questions that you have.
10. Start a journal to summarize what you've learnt.

** DONE Review

1. When are data Big Data?
   #+begin_quote
   3V: When they're either very large (volume > 1 PetaByte), coming in
   fast (velocity), or consist of multiple modes or media types
   (variety).
   #+end_quote

2. What does "DevOps" mean?
   #+begin_quote
   "Development Operations", frameworks that address the interface
   between IT operations and software developers.
   #+end_quote

3. What exactly does =sudo apt update -y && sudo apt upgrade -y= mean?
   #+begin_quote
   "As super-user, use the package manager program =apt= to =update= the
   list of installed software (don't ask me any questions, and then
   (provided the =update= process is complete), install the available
   =upgrade= software (again without asking me any questions).
   #+end_quote

4. Name at least one element of a "data science workflow"!
   #+begin_quote
   1) *Search* for data, e.g. with a search engine
   2) *Download* data, e.g. with =wget= on the command-line
   3) *Edit* code & documentation in a notebook, e.g. =.org= in Emacs
   4) *Run* scripts on the command-line using the =bash= shell program
   5) *Debug* scripts, e.g. using the GNU debugger =gdb=
   6) *Visualize* results, e.g. using R's =plot= function
   7) *Predict* trends, e.g. using R's =lm= regression model
   8) *Transform* data, e.g. using =log10= for base-10 logarithms
   9) *Delete* data, e.g. by redirecting errors to =/dev/null=
   10) *Model* data, e.g. by converting CSV data to a =data.frame=
   #+end_quote

5. What is *RStudio*?
   #+begin_quote
   RStudio is a popular integrated development environment (IDE) for R
   (and Python, with SQL) with notebook and publication capabilities.
   #+end_quote

6. What is the "Tidyverse"?
   #+begin_quote
   The "Tidyverse" is a collection of R packages including the popular
   =ggplot2= visualization package, and =dplyr= for =data.frame=
   manipulation. I don't like it but don't let me stop you from liking
   and using the "Tidyverse" packages: You can turn it into an
   interesting project, too! Hadley Wickham is a central figure for
   the "Tidyverse". He is also the author of the free "R in Action"
   textbook, of the original =ggplot2=, and of RStudio.
   #+end_quote

** DONE A brief review of R - 10 problems
#+attr_html: :width 400px:
[[../img/review.png]]

- *Download* the practice file: [[https://tinyurl.com/R-basics-org][tinyurl.com/R-basics-org]] on the
  command-line using =wget= or in Emacs using =eww=

- *Complete* the practice file: There are three short problems for each
  of R's data structures - numbers, vectors, matrices, data frames,
  factors, and lists.

- *Upload* your completed practice file to Canvas so that I can check
  your state of mind and mastery.

- *Review* the solutions in class.

- *Review* your own solutions depending on how you did in class.

* Week 2: Scope and environment
#+attr_html: :width 400px:
#+caption: Nikolay Bogdanov-Belsky, Mental Arithmetic (1893)
[[../img/bogdanovbelskymentalarithmetic.jpg]]

- [X] R Basics practice: You need to train! What can I do? [fn:1].
- [X] *Test 1* (R Basics) is live - deadline: Friday 24-Jan (11:59 pm).
- [ ] Calling functions: *Scope* and R *environments*
- [ ] *Control flow*: DataCamp review (by Thursday 23-Jan, 11 am)

** DONE Scope and environments

- [X] Lecture: [[https://github.com/birkenkrahe/ds2-25/blob/main/org/2_scoping.org][See GitHub]]
- [X] Codealong: [[https://tinyurl.com/scoping-codealong-org][tinyurl.com/scoping-codealong-org]]
- [ ] Practice: [[https://tinyurl.com/scoping-practice-org][tinyurl.com/scoping-practice-org]]

** DONE DataCamp review: Control flow (9 problems)

I now longer trust that *showing* you solutions has any effect on your
learning skills. You need to *solve problems*, no matter how small. If
you don't do this on your own time, we'll do it in class.

Download and complete the practice file:
[[https://tinyurl.com/ds2-practice-2-org][tinyurl.com/ds2-practice-2-org]]

* Week 3: Arguments
#+attr_html: :width 600px:
#+caption: St. Thomas Aquinas (1225-1274)
[[../img/aquinas.jpg]]

/What are humanity's most discussed questions throughout the ages?/
#+begin_quote
- Why are we here?
- What is the purpose of life?
- Is there a higher power or ultimate truth?
- What is the nature of good and evil?
#+end_quote

- [X] On the power of arguments (a philosophical distraction)
- [X] *Projects:* Enter your ideas now - sprint review: Fri 7-Feb
- [X] *Test 2* due Fri 31-Jan (100%) - available until Fri 7-Feb (50%)
- [X] *Caveat:* test includes all of the lecture content on "scoping"
- [X] *Review:* Plot test 1 grades [[https://tinyurl.com/scoping-review-org][tinyurl.com/scoping-review-org]]
- [X] *Lecture*: Scoping, environments, namespaces (continued)
- [X] *Practice:* [[https://tinyurl.com/scoping-practice-org][tinyurl.com/scoping-practice-org]]
- [X] *Lecture*: Arguments (GitHub) with practice (GitHub)

** Projects - sprint review coming soon
#+attr_html: :width 600px: 
[[../img/projects.png]]

** Plot your test grades (future assignment)
#+attr_html: :width 400px:
[[../img/test_1_report.png]]

Don't let your plotting skills go to waste! When I see a plot like
this, I always want to recreate (and improve) it (if I can).

Let's do this together! Code along: [[https://tinyurl.com/scoping-review-org][tinyurl.com/scoping-review-org]]

** Current assignments

- New scoping review assignment (deadline Feb 7).
- Pushed DataCamp assignment to Friday 11:59 pm.
- Remember: 50% for a week after the deadline, 0% thereafter.
- Project proposal deadline coming up (Feb 7).
- You can do it on your own or in a team (we'll make it work).

** Scoping practice (lab)

- *Practice* file: [[https://tinyurl.com/scoping-practice-org][tinyurl.com/scoping-practice-org]]
- Upload the result to Canvas
  
** Function arguments (lecture & practice)

- Download the code along file: [[https://tinyurl.com/arguments-code-along][tinyurl.com/arguments-code-along]]
- Save it as an Org-mode file
- Code along with me during the lecture.

* Week 4: & Sprint review

- [ ] Test 2 results & extended deadline (50%)
- [ ] Review: Loops in R & Arguments
- [ ] Test 3 due by Friday Feb 7 (extended deadline Feb 14)
- [ ] Lecture & practice: 

** TODO Test 2 results are excellent!
#+attr_html: :width 400px: 
[[../img/test2_results.png]]

- A few missed the deadline & the extended deadline for test 1: 0 pts!
- A few missed the deadline for test 2, too: complete it for 50% by Friday!
- Use Canvas/Google Calendar to stay on top of your assignments!

** TODO Home assignment: Scoping & Environments

Some students asked for a reminder. See also solution PDF in GitHub.

1. How would you put this code into an R script?
   #+begin_example R
   hist(Nile)
   #+end_example
   #+begin_src R :tangle histNile.R
     hist(Nile)  # tangle with C-c C-v t (org-babel-tangle)
   #+end_src
   
2. How would you check that a script exists without leaving R?
   #+begin_src bash :results output :exports both
     ls -l *.R
   #+end_src
   #+begin_src R :results output
     system("ls -l *.R*")
   #+end_src

   #+RESULTS:
   : -rw-rw-r-- 1 aletheia aletheia 2966 Jan 30 09:38 datasets.RData
   : -rw-rw-r-- 1 aletheia aletheia   39 Feb  4 08:47 histNile.R
   : -rw-rw-r-- 1 aletheia aletheia  820 Feb  4 08:56 histNile.Rout

3. How can you run the script on the command-line?
   #+begin_src bash :results output :exports both
     Rscript histNile.R
   #+end_src

4. What is the output of the script?
   #+begin_src R :results output
     system("file R*") # Rscript produces R* files
     system("evince Rplots.pdf")  # evince is a Linux PDF viewer app
   #+end_src

   #+RESULTS:
   : Rplots.pdf: PDF document, version 1.4, 1 pages

5. What is the other way to run R scripts on the command-line?
   #+begin_src R :results output
     system("R CMD BATCH histNile.R")
     system("ls -l *.R* R*")
     system("cat histNile.Rout")
   #+end_src


** TODO Review: Loops in R & Arguments



* Footnotes

[fn:1] Do I have to review my didactic approach? My assumption has
been that if I force you to type everythng in while I do it, it will
somehow rub off on you, and motivate you to continue on your own
later. But now I am not so sure anymore. *Care to let me know what it
would take for you to get better at coding?* More graded exercises?
