#+TITLE: CALLING FUNCTIONS - FUNCTION ARGUMENTS - CODE ALONG
#+AUTHOR: Marcus Birkenkrahe
#+SUBTITLE: DSC 205 - Advanced introduction to data science - Spring 2025
#+STARTUP: overview hideblocks indent
#+OPTIONS: toc:nil num:nil ^:nil
#+PROPERTY: header-args:R :session *R* :results output :exports both :noweb yes
* README

You will learn:

- [ ] The meaning of function argument matching
- [ ] Difference between exact, partial, positional arguments
- [ ] Use of ellipses in functions

* Exact argument matching

#+begin_src R
  foo <- matrix(
    data=1:9,
    nrow=3,
    dimnames=list(LETTERS[1:3], # 'dimnames' must be a list
                  LETTERS[4:6]))
  foo
#+end_src

Switching around the arguments:
#+begin_src R
  bar <- 
#+end_src

- What is ~foo == bar~?
  #+begin_src R

  #+end_src

* Partial argument matching

#+begin_src R

#+end_src

- Change ~da~ to ~d~ - what happens and why?[fn:1]
  #+begin_src R

  #+end_src

* Positional argument matching

#+begin_src R

#+end_src

- What happens if you leave out the ~byrow~ argument value?
  #+begin_src R

  #+end_src

* Mixed argument matching

#+begin_src R
x
#+end_src

* Use of ellipses in arguments

- What happens when you specify NO arguments for a ~data.frame~ named
  ~df~?
  #+begin_src R

  #+end_src

- ~args~ will also tell you: run ~args~ on ~data.frame~
  #+begin_src R

  #+end_src

- ~plot~ is not variadic but accepts ellipsis arguments:
  #+begin_src R

  #+end_src

* Exercises

1) Is ~matrix~ elliptic? Does this function have an ellipsis (~...~) in
   its list of arguments?
   #+begin_src R

   #+end_src

2) Use positional matching with ~seq~ to create a sequence of values
   between -4 and 4 that progresses in steps of 0.2.
   #+begin_src R

   #+end_src

3) Identify, which style of argument matching is being used: exact,
   partial, positional, or mixed. If mixed, which arguments are
   specified?

   *Write your answer as a comment after the command.*

   1. ~array~
      #+begin_src R
        array(8:1,dim=c(2,2,2))
      #+end_src

   2. ~rep~
      #+begin_src R
        rep(1:2,3) 
      #+end_src

   3. ~seq~
      #+begin_src R
        seq(from=10,to=8,length=5) 
      #+end_src

   4. ~sort~
      #+begin_src R
        sort(decreasing=T,x=c(2,1,1,2,0.3,3,1.3))
      #+end_src

   5. ~which~
      #+begin_src R
        which(matrix(c(T,F,T,T),2,2)) 
      #+end_src

   6. ~which~
      #+begin_src R
        which(matrix(c(T,F,T,T),2,2),a=T)
      #+end_src

